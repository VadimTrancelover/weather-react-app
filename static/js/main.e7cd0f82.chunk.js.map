{"version":3,"sources":["APIkey.js","components/CurrentWeather.jsx","components/ForecastWeather.jsx","components/WeatherBlock/WeatherBlock.jsx","components/SeachLogo/SearchLogoBlock.jsx","components/ErrorMessage/ErrorMessage.jsx","redux/actions/searchActions.js","components/pages/HomepageWeather.jsx","components/pages/MoreInformation.jsx","App.js","redux/reducers/search.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","CurrentWeather","city","country","temp","iconWeather","weather","windSpeed","pressure","currentTemp","Math","round","currentWindSpeed","className","alt","src","to","ForecastWeather","day","main","discription","map","description","icons","icon","dt","console","log","UNIX_timestamp","a","Date","month","getUTCMonth","date","getUTCDate","timeConverter","tempRound","WeatherLoadedBlock","props","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","SearchLogoBlock","border","ErrorMessage","fetchWeather","text","dispatch","axios","get","API_Key","then","responce","type","payload","data","catch","error","status","fetchForecast","list","filter","dt_txt","match","err","HomepageWeather","messageForUser","React","useState","setCity","useDispatch","useSelector","search","weatherData","loading","weatherForecast","forecastWeatherData","weatherCity","ViewWeatherBlock","name","sys","obj","wind","forecastDays","length","index","cityWeather","localStorage","getItem","useEffect","dataFetch","action","classNames","wrapper_cold","id","onSubmit","e","preventDefault","setItem","value","onChange","target","SearchWeather","placeholder","autoFocus","MoreInformationPage","clouds","all","tempFeelsLike","feels_like","humidity","tempMin","temp_min","tempMax","temp_max","visibility","windDeg","deg","sunrise","sunset","timezone","hour","getUTCFullYear","getUTCHours","min","getUTCMinutes","sec","getUTCSeconds","getZero","time","getHours","wrapper_cold_detail_information","App","exact","path","element","MoreInformation","initialState","state","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7cd0f82.chunk.js","sourcesContent":["module.exports = {\r\n    'API_Key': \"3f1b2782ee3a649ad85648d928019566\"\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction CurrentWeather({city, country,temp, iconWeather, weather, windSpeed, pressure}) {\r\n\r\n\r\n    const currentTemp = Math.round(temp)\r\n    const currentWindSpeed = Math.round((windSpeed)*10)/10;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"current-weather\"> \r\n                    <h3 className=\"current-city\">{city}, {country}</h3> \r\n                    <img alt=\"weather\" src={`http://openweathermap.org/img/wn/${iconWeather}@2x.png`}/> \r\n                    <h1 className=\"current-temperature\">{currentTemp}°c</h1> \r\n                    <h4>{weather}</h4> \r\n                    <p>скорость ветра: {currentWindSpeed} м/с</p> \r\n                    <p>давление: {pressure} mbar</p> \r\n                    <Link className=\"current-weather-details-link\" to=\"/moreinformation\">Подробнее... </Link>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\r\n\r\nfunction ForecastWeather({day}) {\r\n\r\n    function timeConverter(UNIX_timestamp) { \r\n        let a = new Date(UNIX_timestamp * 1000);\r\n        let months = ['01','02','03','04','05','06','07','08','09','10','11','12'];\r\n        let month = months[a.getUTCMonth()];\r\n        let date = a.getUTCDate();\r\n\r\n        let days = date < 10 ? '0' + date : date;\r\n       \r\n        const time = days + '.' + month;\r\n        return time;\r\n      }\r\n\r\n    const temp = day.main.temp;\r\n    const discription = day.weather ? day.weather.map((weather) => weather.description) : \"\"\r\n    const icons = day.weather ? day.weather.map((weather) => weather.icon) : \"\"\r\n    \r\n    const tempRound = (temp) => {\r\n        return Math.round(temp)\r\n    }  \r\n\r\n    const {\r\n        dt,\r\n    } = day;\r\n\r\n    console.log(discription)\r\n\r\n    return (\r\n                <div className=\"forecast-day-weather\">\r\n                    <p className=\"day\">{timeConverter(dt)}</p>\r\n                    <img alt=\"weather\" src={`http://openweathermap.org/img/wn/${icons}@2x.png`}/> \r\n                    <h1 className=\"current-temperature\">{tempRound(temp)}°c</h1> \r\n                    <h4>{discription}</h4> \r\n                </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ForecastWeather\r\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst WeatherLoadedBlock = (props) => (\r\n  <ContentLoader \r\n    speed={2}\r\n    width={140}\r\n    height={300}\r\n    viewBox=\"0 0 140 300\"\r\n    backgroundColor=\"#969393\"\r\n    foregroundColor=\"#ecebeb92\"\r\n    {...props}\r\n  >\r\n    <rect x=\"95\" y=\"97\" rx=\"0\" ry=\"0\" width=\"1\" height=\"0\" /> \r\n    <rect x=\"19\" y=\"11\" rx=\"12\" ry=\"12\" width=\"100\" height=\"26\" /> \r\n    <rect x=\"20\" y=\"128\" rx=\"12\" ry=\"12\" width=\"96\" height=\"55\" /> \r\n    <rect x=\"4\" y=\"189\" rx=\"12\" ry=\"12\" width=\"131\" height=\"87\" /> \r\n    <circle cx=\"68\" cy=\"83\" r=\"34\" />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default WeatherLoadedBlock;","import React from 'react'\r\n\r\nfunction SearchLogoBlock() {\r\n    return (\r\n        <div className='search-logo'>\r\n            <img src=\"https://i.ibb.co/vJs9Wm8/magnifier-1724298-640.png\" alt=\"magnifier-1724298-640\" border=\"0\"/>\r\n            <h3>Давай поищем город...</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchLogoBlock\r\n","import React from 'react'\r\n\r\nfunction ErrorMessage() {\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"error-message\">Неверное написание или данные остутсвует, пожалуйста, попробуйте еще раз или проверьте подключение к сети!</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import axios from 'axios'\r\nimport { API_Key } from '../../APIkey';\r\n\r\nexport const SearchWeather = (text) => (\r\n    {\r\n      type: 'SEARCH_WEATHER',\r\n      payload: text,      \r\n    }\r\n)\r\n\r\nexport const fetchWeather = (text) => (dispatch) => \r\n  {\r\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&lang=ru&appid=${API_Key}`)\r\n        .then(responce => {\r\n            dispatch({\r\n              type:'FETCH_WEATHER',\r\n              payload: responce.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n          if(error.status === 400) {\r\n            console.log(error.responce);\r\n            dispatch({\r\n              type: 'LOADING'\r\n            })\r\n          } else {\r\n            console.log(error.responce)\r\n            dispatch({\r\n              type: 'ERROR',\r\n          })\r\n          }\r\n        })\r\n  }\r\n\r\n  export const fetchForecast = (text) => (dispatch) => \r\n  {\r\n    axios.get(`http://api.openweathermap.org/data/2.5/forecast?q=${text}&exclude=daily&units=metric&lang=ru&appid=${API_Key}`)\r\n        .then(responce => {\r\n            dispatch({\r\n              type:'FETCH_FORECAST',\r\n              payload: responce.data.list.filter((day) => day.dt_txt.match(/\\b12:00:00\\b/))\r\n            })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          dispatch({\r\n            type: 'ERROR',\r\n          })\r\n        })\r\n  }\r\n\r\nexport const setLoading = () => (\r\n  {\r\n    type: 'LOADING'\r\n  }\r\n)\r\n\r\nexport const setError = () => (\r\n  {\r\n    type: 'ERROR'\r\n  }\r\n)","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\n//Components\r\nimport CurrentWeather from \"../CurrentWeather\";\r\nimport ForecastWeather from \"../ForecastWeather\";\r\nimport WeatherLoadedBlock from \"../WeatherBlock/WeatherBlock\";\r\nimport SearchLogoBlock from \"../SeachLogo/SearchLogoBlock\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\n//Redux\r\nimport { SearchWeather, fetchWeather, setLoading, fetchForecast} from '../../redux/actions/searchActions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\n\r\n\r\nfunction HomepageWeather() {\r\n  const [city, setCity] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const text = useSelector(({search}) => search.text);\r\n  const weather = useSelector(({search}) => search.weatherData);\r\n  const loading = useSelector(({search}) => search.loading);\r\n  const error = useSelector(({search}) => search.error);\r\n  const weatherForecast = useSelector(({search}) => search.forecastWeatherData);\r\n  const temp= weather ? weather.main.temp : \"\";\r\n\r\n  const onChange = (e) => {\r\n    setCity(e.target.value);\r\n    dispatch(SearchWeather(e.target.value))\r\n  };\r\n\r\n\r\n  const handleToSubmit = () => {\r\n    localStorage.setItem(1, city);\r\n  }\r\n\r\n\r\n  const onHandleSetCity = (e) => {\r\n    e.preventDefault();\r\n    dispatch(fetchWeather(text));\r\n    dispatch(fetchForecast(text));\r\n    dispatch(setLoading());\r\n    setCity(\"\");\r\n    handleToSubmit();\r\n  };\r\n\r\n  const weatherCity = weather.weather;\r\n\r\n  const ViewWeatherBlock = (\r\n\r\n    <CurrentWeather\r\n      city={weather ? weather.name : \"\"}\r\n      country={weather ? weather.sys.country : \"\"}\r\n      temp={weather ? weather.main.temp : \"\"}\r\n      iconWeather={\r\n        weather.weather ? weatherCity.map((obj) => obj.icon) : \"\"\r\n      }\r\n      weather={\r\n        weather.weather ? weatherCity.map((obj) => obj.description) : \"\"\r\n      }\r\n      windSpeed={weather ? weather.wind.speed : \"\"}\r\n      pressure={weather ? weather.main.pressure : \"\"}\r\n    />\r\n  );\r\n\r\n\r\n  let forecastDays = '';\r\n  forecastDays = weatherForecast && weatherForecast.length > 0 ? weatherForecast.map((day, index) => <ForecastWeather key={index} day={day} />) : '';\r\n\r\n  if (error) {\r\n    forecastDays = '';\r\n  } \r\n\r\n  let messageForUser;\r\n\r\n  if (error) {\r\n      messageForUser = <ErrorMessage/>;\r\n    } else if (loading) {\r\n      messageForUser = <WeatherLoadedBlock/>;\r\n    } else {\r\n      messageForUser = ViewWeatherBlock;\r\n    }\r\n\r\n    const cityWeather = localStorage.getItem(1)\r\n\r\nReact.useEffect(() => {\r\n  const dataFetch = (action) => \r\n  cityWeather ? dispatch(action(cityWeather)) : '';\r\n  dataFetch(fetchWeather);\r\n  dataFetch(fetchForecast);\r\n  console.log(temp)\r\n}, [text])\r\n\r\n\r\n  return (\r\n    <div className={classNames({\r\n      wrapper_cold: temp,\r\n      // wrapper_warm: temp > 1,\r\n  })}>\r\n      <div className=\"search-bar\">\r\n        <form id=\"search-city\" onSubmit={onHandleSetCity}>\r\n          <input\r\n            value={city}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            className=\"input-search\"\r\n            name=\"city\"\r\n            placeholder=\"Введите название...\"\r\n            autoFocus=\"\"\r\n          />\r\n        </form>\r\n      </div>\r\n      <div>\r\n          {error ? messageForUser : (weather ? messageForUser : <SearchLogoBlock/>)}\r\n      </div>\r\n      <div className=\"forecast-weather\">\r\n          {forecastDays}\r\n      </div>\r\n      \r\n    <>\r\n      {/* <div className=\"container\">\r\n                    <div className=\"accordion\">\r\n                    <div className=\"accordion_forecast-weather\">\r\n                        <h3 className=\"accordion-forecast-weather__title\">Прогноз погоды на ближайшие дни <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/></svg></h3>\r\n                        <div className=\"accordion-forecast-weather__content\">\r\n                            <div className=\"accordion-forecast-weather__content-inside\">\r\n                            <div className=\"forecast-weather\">\r\n                                <div className=\"forecast-day-weather\">\r\n                                    <p className=\"day\">19.11</p>\r\n                                    <img alt=\"weather\" src=\"http://openweathermap.org/img/wn/10d@2x.png\"/> \r\n                                    <h1 className=\"current-temperature\">26°c</h1> \r\n                                    <h4>Дождь</h4> \r\n                                </div>\r\n                                <div className=\"forecast-day-weather\">\r\n                                    <p className=\"day\">20.11</p>\r\n                                    <img alt=\"weather\" src=\"http://openweathermap.org/img/wn/10d@2x.png\"/> \r\n                                    <h1 className=\"current-temperature\">26°c</h1> \r\n                                    <h4>Дождь</h4> \r\n                                </div>\r\n                                <div className=\"forecast-day-weather\">\r\n                                    <p className=\"day\">21.11</p>\r\n                                    <img alt=\"weather\" src=\"http://openweathermap.org/img/wn/10d@2x.png\"/> \r\n                                    <h1 className=\"current-temperature\">26°c</h1> \r\n                                    <h4>Дождь</h4> \r\n                                </div>\r\n                                <div className=\"forecast-day-weather\">\r\n                                    <p className=\"day\">22.11</p>\r\n                                    <img alt=\"weather\" src=\"http://openweathermap.org/img/wn/10d@2x.png\"/> \r\n                                    <h1 className=\"current-temperature\">26°c</h1> \r\n                                    <h4>Дождь</h4> \r\n                                </div>\r\n                                <div className=\"forecast-day-weather\">\r\n                                    <p className=\"day\">23.11</p>\r\n                                    <img alt=\"weather\" src=\"http://openweathermap.org/img/wn/10d@2x.png\"/> \r\n                                    <h1 className=\"current-temperature\">26°c</h1> \r\n                                    <h4>Дождь</h4> \r\n                                </div>\r\n                                <div className=\"forecast-day-weather\">\r\n                                    <p className=\"day\">24.11</p>\r\n                                    <img alt=\"weather\" src=\"http://openweathermap.org/img/wn/10d@2x.png\"/> \r\n                                    <h1 className=\"current-temperature\">26°c</h1> \r\n                                    <h4>Дождь</h4> \r\n                                </div>\r\n                                <div className=\"forecast-day-weather\">\r\n                                    <p className=\"day\">25.11</p>\r\n                                    <img alt=\"weather\" src=\"http://openweathermap.org/img/wn/10d@2x.png\"/> \r\n                                    <h1 className=\"current-temperature\">26°c</h1> \r\n                                    <h4>Дождь</h4> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div> \r\n                </div>  */}\r\n              </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomepageWeather;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {fetchWeather} from '../../redux/actions/searchActions';\r\nimport classNames from \"classnames\";\r\n\r\nfunction MoreInformationPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(({search}) => search.weatherData);\r\n    const text =useSelector(({search}) => search.text);\r\n\r\n\r\n    const clouds = weather ? weather.clouds.all : '';\r\n    const tempFeelsLike = weather ? weather.main.feels_like : '';\r\n    const humidity = weather ? weather.main.humidity : '';\r\n    const pressure = weather ? weather.main.pressure : '';\r\n    const temp = weather ? weather.main.temp : '';\r\n    const tempMin = weather ? weather.main.temp_min : '';\r\n    const tempMax = weather ? weather.main.temp_max : '';\r\n    const visibility = weather ? weather.visibility : '';\r\n    const windDeg = weather ? weather.wind.deg : '';\r\n    const windSpeed = weather ? weather.wind.speed : '';\r\n    const iconWeather = weather ? weather.weather.map((obj) => obj.icon) : '';\r\n    const sunrise = weather ? weather.sys.sunrise : '';\r\n    const sunset = weather ? weather.sys.sunset : '';\r\n    const timezone = weather ? weather.timezone : '';\r\n\r\n    const currentWindSpeed = Math.round((windSpeed)*10)/10;\r\n\r\n    function timeConverter(UNIX_timestamp) { \r\n        let a = new Date(UNIX_timestamp * 1000);\r\n        let months = ['01','02','03','04','05','06','07','08','09','10','11','12'];\r\n        let year = a.getUTCFullYear();\r\n        let month = months[a.getUTCMonth()];\r\n        let date = a.getUTCDate();\r\n        let hour = a.getUTCHours();\r\n        let min = a.getUTCMinutes(); \r\n        let sec = a.getUTCSeconds();\r\n\r\n\r\n        const getZero = (time) => {\r\n           return time < 10 ? '0' + time : time; \r\n        }\r\n        \r\n        \r\n\r\n        const timeShift = (UNIX_timeshift) => {\r\n            let a = new Date(UNIX_timeshift * 60);\r\n            let hourShift = a.getHours();\r\n    \r\n            return hourShift;\r\n        }\r\n        \r\n        let hourTimeShift = (+getZero(hour)) + (+timeShift(timezone));\r\n        \r\n        //const time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n        let shiftTimeHoursMin = hourTimeShift + ':' + getZero(min) + ':' + getZero(sec);\r\n        return shiftTimeHoursMin;\r\n      }\r\n    \r\n\r\n    const tempRound = (temp) => {\r\n        return Math.round(temp)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchWeather(text))\r\n    },[text])\r\n\r\n    return (\r\n        <div className={classNames({\r\n            wrapper_cold_detail_information: temp,\r\n            // wrapper_warm_detail_information: temp > 1,\r\n        })}>\r\n            <div className=\"detail-information\">\r\n                <div className=\"left-column_information\">\r\n                    <div className=\"weather-icon\">\r\n                        <img alt=\"weather\" src={`http://openweathermap.org/img/wn/${iconWeather}@4x.png`}/>\r\n                    </div>\r\n                    <div className=\"detail-temperature\">\r\n                        <h1 className=\"temperature\">{tempRound(temp)}°C</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-column_information\">\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Облачность:</h3> \r\n                        <p>{clouds} %</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Ощущается как:</h3>\r\n                        <p>{tempRound(tempFeelsLike)}°C</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Влажность:</h3>\r\n                        <p>{humidity} %</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Давление:</h3>\r\n                        <p>{pressure} mbar</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Минимальная температура:</h3>\r\n                        <p>{tempRound(tempMin)}°C</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Максимальная температура:</h3>\r\n                        <p>{tempRound(tempMax)}°C</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Восход в:</h3>\r\n                        <p>{timeConverter(sunrise, timezone)}</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Закат в:</h3>\r\n                        <p>{timeConverter(sunset, timezone)}</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Видимость:</h3>\r\n                        <p>{visibility}м</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Направление ветра:</h3>\r\n                        <p>{windDeg}°</p>\r\n                    </div>\r\n                    <div className=\"information-parametr\">\r\n                        <h3>Скорость ветра:</h3>\r\n                        <p>{currentWindSpeed}м/с</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"link-to-home\">\r\n                <Link className=\"link-to-home-title\" to='/'>Перейти на домашнюю страницу</Link>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoreInformationPage;\r\n","import './App.css';\r\nimport './index.css';\r\nimport  { HomepageWeather, MoreInformationPage }  from './components/pages';\r\n\r\nimport {Routes, Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<HomepageWeather/>}/>\r\n        <Route exact path=\"/moreinformation\" element={<MoreInformationPage/>}/>\r\n      </Routes>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    text: '',\r\n    weatherData: '',\r\n    forecastWeatherData: '',\r\n    loading: false,\r\n    error: false,\r\n}\r\n\r\nconst search = (state = initialState, action) => {\r\n        console.log(\"Прогноз погоды\", state.forecastWeatherData)\r\n        console.log(\"Текущая погода\", state.weatherData)\r\n        switch(action.type) {\r\n            case 'SEARCH_WEATHER':\r\n                return {\r\n                    ...state,\r\n                    text: action.payload,\r\n                    loading: false,\r\n                    error: false\r\n                };\r\n            case 'FETCH_WEATHER':\r\n                return {\r\n                    ...state,\r\n                    weatherData: action.payload,\r\n                    loading: false,\r\n                    error: false\r\n                }\r\n            case 'FETCH_FORECAST':\r\n                return {\r\n                    ...state,\r\n                    forecastWeatherData: action.payload,\r\n                    loading: false,\r\n                    error: false\r\n                }\r\n            case 'LOADING':\r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n                }\r\n            case 'ERROR':\r\n                return {\r\n                    ...state,\r\n                    error: true\r\n                }\r\n            default:\r\n                return state \r\n        }\r\n}\r\n\r\nexport default search;","import { combineReducers } from \"redux\";\r\n\r\nimport search from \"./search\";\r\n\r\nconst rootReducer = combineReducers({\r\n    search,\r\n\r\n})\r\n\r\nexport default rootReducer;","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport  thunk  from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconsole.log(store.state)\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store = {store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}